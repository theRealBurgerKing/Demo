{"version":3,"file":"useSuspenseQuery.esm.js","sources":["../../src/useSuspenseQuery.ts"],"sourcesContent":["import { QueryObserver } from '@tanstack/query-core'\nimport { useBaseQuery } from './useBaseQuery'\nimport type {\n  DefinedQueryObserverResult,\n  DistributiveOmit,\n  OmitKeyof,\n  QueryKey,\n} from '@tanstack/query-core'\nimport type { UseQueryOptions } from './types'\n\nexport type UseSuspenseQueryResult<\n  TData = unknown,\n  TError = unknown,\n> = DistributiveOmit<\n  DefinedQueryObserverResult<TData, TError>,\n  'isPlaceholderData'\n>\n\nexport type UseSuspenseQueryOptions<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n> = OmitKeyof<\n  UseQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n  | 'enabled'\n  | 'useErrorBoundary'\n  | 'suspense'\n  | 'placeholderData'\n  | 'networkMode'\n  | 'onSuccess'\n  | 'onError'\n  | 'onSettled'\n  | 'getPreviousPageParam'\n  | 'getNextPageParam'\n>\n\nexport function useSuspenseQuery<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(options: UseSuspenseQueryOptions<TQueryFnData, TError, TData, TQueryKey>) {\n  return useBaseQuery(\n    {\n      ...options,\n      enabled: true,\n      useErrorBoundary: true,\n      suspense: true,\n      placeholderData: undefined,\n      networkMode: 'always',\n    },\n    QueryObserver,\n  ) as UseSuspenseQueryResult<TData, TError>\n}\n"],"names":["useSuspenseQuery","options","useBaseQuery","enabled","useErrorBoundary","suspense","placeholderData","undefined","networkMode","QueryObserver"],"mappings":";;;AAqCO,SAASA,gBAAT,CAKLC,OALK,EAKqE;AAC1E,EAAA,OAAOC,YAAY,CACjB,EACE,GAAGD,OADL;AAEEE,IAAAA,OAAO,EAAE,IAFX;AAGEC,IAAAA,gBAAgB,EAAE,IAHpB;AAIEC,IAAAA,QAAQ,EAAE,IAJZ;AAKEC,IAAAA,eAAe,EAAEC,SALnB;AAMEC,IAAAA,WAAW,EAAE,QAAA;GAPE,EASjBC,aATiB,CAAnB,CAAA;AAWD;;;;"}